@{
    Layout = "_GetTicketLayout";
    ViewData["Title"] = "Hành trình của Quý khách";
}
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hành trình của Quý khách</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>

    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 min-h-screen py-8">
    <!-- Banner -->
    <div
        class="relative w-full h-56 md:h-64 bg-gradient-to-b from-blue-100 to-white flex items-center justify-center mb-8">
        <img src="https://res.cloudinary.com/dgkrchato/image/upload/v1717570732/bamboo-banner.png" alt="Bamboo Airways"
            class="absolute inset-0 w-full h-full object-cover object-top" style="z-index:1;">
        <div class="absolute top-8 left-1/2 -translate-x-1/2 z-10">
            <div class="bg-white rounded-xl shadow-lg px-8 py-4 text-center">
                <h1 class="text-2xl md:text-3xl font-bold text-green-700">Hành trình của Quý khách</h1>
                <div id="routeInfo" class="text-lg text-blue-900 mt-2"></div>
            </div>
        </div>
    </div>

    <!-- Flight Info -->
    <div class="max-w-4xl mx-auto mb-8">
        <div id="flightInfo" class="bg-white rounded-xl shadow p-6"></div>
    </div>

    <!-- Passengers Info -->
    <div class="max-w-4xl mx-auto mb-8">
        <h2 class="text-xl font-bold text-blue-900 mb-4">Thông tin hành khách</h2>
        <div id="passengersContainer"></div>
    </div>

    <!-- Total Price and Payment -->
    <div class="max-w-4xl mx-auto mb-8">
        <div class="bg-white rounded-xl shadow p-6">
            <div class="space-y-4">
                <div class="flex justify-between border-b pb-4">
                    <span class="font-semibold">Giá vé cơ bản:</span>
                    <span id="basePrice" class="font-bold"></span>
                </div>
                <div class="flex justify-between border-b pb-4">
                    <span class="font-semibold">Phụ thu dịch vụ:</span>
                    <span id="serviceTotal" class="font-bold"></span>
                </div>
                <div class="flex justify-between text-lg pt-2">
                    <span class="font-bold">Tổng cộng:</span>
                    <span id="grandTotal" class="font-bold text-green-700"></span>
                </div>
            </div>
            <div class="mt-6 flex justify-end gap-4">
                <button onclick="history.back()" class="px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                    Quay lại
                </button>
                <button id="btnContinue" class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
                    Tiếp tục
                </button>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const flightInfo = document.getElementById('flightInfo');
            const flight = JSON.parse(sessionStorage.getItem('flightData') || 'null');
            const selectedFlight = JSON.parse(sessionStorage.getItem('selectedFlight') || 'null');

            if (flight && selectedFlight) {
                let html = `
                    <h5 class="font-bold text-center text-2xl mb-6 text-blue-900">Thông tin chuyến bay đã chọn</h5>
                    <div class="flight-card" data-flight-id="${flight.FlightID}">
                        <div class="flex flex-col md:flex-row bg-white rounded-xl p-6 items-center justify-between">
                            <div class="flex-1 flex flex-col md:flex-row items-center gap-8">
                                <!-- Departure -->
                                <div class="text-center md:text-left">
                                    <div class="text-2xl font-bold text-gray-800">${flight.DepartureTime}</div>
                                    <div class="text-base font-semibold text-gray-600">${flight.DepartureAirport.AirportCode}</div>
                                    <div class="text-sm text-gray-500">${flight.DepartureAirport.City}</div>
                                </div>

                                <!-- Flight Path -->
                                <div class="flex flex-col items-center">
                                    <div class="text-sm text-green-700 font-semibold mb-2">Bay thẳng</div>
                                    <div class="w-32 border-t-2 border-dotted border-gray-400 mb-2"></div>
                                    <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path d="M2.5 19l19-7-7 7-2-2-7 2z" />
                                    </svg>
                                </div>

                                <!-- Arrival -->
                                <div class="text-center md:text-left">
                                    <div class="text-2xl font-bold text-gray-800">${flight.ArrivalTime}</div>
                                    <div class="text-base font-semibold text-gray-600">${flight.ArrivalAirport.AirportCode}</div>
                                    <div class="text-sm text-gray-500">${flight.ArrivalAirport.City}</div>
                                </div>

                                <!-- Flight Info -->
                                <div class="flex flex-col text-sm text-gray-600 ml-4">
                                    <span class="font-semibold">✈ ${flight.Plane?.Model || 'Unknown'}</span>
                                    <span>Operated by TenPM Airways</span>
                                </div>
                            </div>
                        </div>

                        <!-- Price Info -->
                        <div class="mt-6 border-t pt-6">
                            <div class="flex justify-between items-center">
                                <div class="flex flex-col">
                                    <span class="text-lg font-semibold text-gray-600">Hạng vé</span>
                                    <span class="text-2xl font-bold ${selectedFlight.class === 'Economy' ? 'text-green-700' : 'text-blue-900'}">
                                        ${selectedFlight.class === 'Economy' ? 'Economy' : 'Business'}
                                    </span>
                                </div>
                                <div class="flex flex-col text-right">
                                    <span class="text-lg font-semibold text-gray-600">Giá vé cơ bản</span>
                                    <span class="text-2xl font-bold text-blue-900">
                                        ${flight.FareClasses.find(fc =>
                    (fc.ClassName === 'EconomyClass' && selectedFlight.class === 'Economy') ||
                    (fc.ClassName === 'BusinessClass' && selectedFlight.class === 'Business')
                ).Price.toLocaleString('vi-VN')} VND
                                    </span>
                                    <span class="text-sm text-gray-500">
                                        ${selectedFlight.passengerCount} hành khách x ${flight.FareClasses.find(fc =>
                    (fc.ClassName === 'EconomyClass' && selectedFlight.class === 'Economy') ||
                    (fc.ClassName === 'BusinessClass' && selectedFlight.class === 'Business')
                ).Price.toLocaleString('vi-VN')} VND
                                    </span>
                                </div>
                            </div>
                            <div class="flex justify-end mt-4">
                                <div class="text-right">
                                    <span class="text-lg font-semibold text-gray-600">Tổng tiền vé</span>
                                    <div class="text-3xl font-bold text-green-700">
                                        ${(flight.FareClasses.find(fc =>
                    (fc.ClassName === 'EconomyClass' && selectedFlight.class === 'Economy') ||
                    (fc.ClassName === 'BusinessClass' && selectedFlight.class === 'Business')
                ).Price * selectedFlight.passengerCount).toLocaleString('vi-VN')} VND
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;

                flightInfo.innerHTML = html;
            }
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const btnShowBuy = document.getElementById('btnShowBuyBaggage');
            const popupBuy = document.getElementById('buyBaggagePopup');
            const closeBuy = document.getElementById('closeBuyBaggage');
            const btnBackBuy = document.getElementById('btnBackBuyBaggage');

            if (btnShowBuy && popupBuy && closeBuy && btnBackBuy) {
                btnShowBuy.addEventListener('click', function (e) {
                    e.preventDefault();
                    popupBuy.classList.remove('hidden');
                });

                closeBuy.addEventListener('click', function () {
                    popupBuy.classList.add('hidden');
                });

                btnBackBuy.addEventListener('click', function () {
                    popupBuy.classList.add('hidden');
                });

                // Đóng popup khi bấm nền mờ
                popupBuy.addEventListener('click', function (e) {
                    if (e.target === popupBuy) popupBuy.classList.add('hidden');
                });
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            const mealListDiv = document.getElementById('mealList');
            const mealTotalSpan = document.getElementById('mealTotal');
            let total = 0;
            let html = '';
            const meals = JSON.parse(localStorage.getItem('selectedMeals') || '[]');

            meals.forEach(m => {
                html += `<div>${m.quantity} ${m.name}</div>`;
                total += m.quantity * m.price;
            });

            mealListDiv.innerHTML = html || '<div class="text-gray-500">Chưa chọn món nào</div>';
            mealTotalSpan.textContent = total.toLocaleString('vi-VN') + ' VND';

            document.getElementById('btnChangeMeal').onclick = function () {
                window.location.href = '/get-ticket/selectmeal';
            }

            // Baggage summary
            const baggageDiv = document.getElementById('baggageSummary');
            const baggageTotal = document.getElementById('baggageTotal');
            let baggage = JSON.parse(localStorage.getItem('selectedBaggage') || 'null');

            if (baggage && baggage.text) {
                baggageDiv.innerHTML = `<div>${baggage.text}</div>`;
                // Lấy số tiền từ text (vd: "15kg - 180.000 VND")
                let match = baggage.text.match(/([0-9.]+)\s*VND/);
                let price = match ? parseInt(match[1].replace(/\./g, '')) : 0;
                baggageTotal.textContent = price.toLocaleString('vi-VN') + ' VND';
            } else {
                baggageDiv.innerHTML = '<div class="text-gray-500">Chưa chọn hành lý ký gửi</div>';
                baggageTotal.textContent = '0 VND';
            }

            document.getElementById('btnChangeBaggage').onclick = function () {
                window.location.href = '/get-ticket/buybaggage';
            }

            // Hiển thị ghế đã chọn
            const seatInfoDiv = document.getElementById('seatInfoSummary');
            let seatInfo = JSON.parse(localStorage.getItem('selectedSeatInfo') || 'null');

            if (seatInfo && seatInfo.seat) {
                seatInfoDiv.innerHTML = `<span class="font-bold text-green-700">Đã chọn ghế: ${seatInfo.seat}</span> <span class="ml-2 text-blue-900 font-bold">${seatInfo.price.toLocaleString('vi-VN')} VND</span>`;
            } else {
                seatInfoDiv.innerHTML = '<span class="text-gray-500">Chưa chọn chỗ ngồi</span>';
            }

            document.getElementById('btnChangeSeat').onclick = function () {
                window.location.href = '/get-ticket/selectseat';
            }

            // Hiển thị phòng chờ thương gia
            const loungeDiv = document.getElementById('loungeSummary');
            const btnLounge = document.getElementById('btnLoungeService');
            let lounge = JSON.parse(localStorage.getItem('selectedLounge') || 'null');

            function renderLounge() {
                if (lounge && lounge.checked) {
                    loungeDiv.innerHTML = `<div class="text-green-700 font-bold">${lounge.text}</div><div class="text-blue-900 font-bold">Tổng giá: ${lounge.price.toLocaleString('vi-VN')} VND</div>`;
                    btnLounge.textContent = 'Thay đổi';
                } else {
                    loungeDiv.innerHTML = '<div class="text-gray-500">Chưa chọn phòng chờ</div>';
                    btnLounge.textContent = 'Thêm dịch vụ';
                }
            }

            renderLounge();

            btnLounge.onclick = function () {
                window.location.href = '/get-ticket/loungeservice';
            }

            // Tính tổng tiền động (tối ưu)
            function getFlightPrice() {
                let selectedFlight = JSON.parse(localStorage.getItem('selectedFlight') || 'null');
                if (selectedFlight && selectedFlight.price) {
                    return selectedFlight.price;
                }
                return 1739000; // fallback mặc định
            }

            function getBaggagePrice() {
                let baggage = JSON.parse(localStorage.getItem('selectedBaggage') || 'null');
                if (baggage && baggage.text) {
                    let match = baggage.text.match(/([0-9.]+)\s*VND/);
                    return match ? parseInt(match[1].replace(/\./g, '')) : 0;
                }
                return 0;
            }

            function getMealPrice() {
                const meals = JSON.parse(localStorage.getItem('selectedMeals') || '[]');
                let mealTotal = 0;
                meals.forEach(m => mealTotal += m.quantity * m.price);
                return mealTotal;
            }

            function getSeatPrice() {
                let seatInfo = JSON.parse(localStorage.getItem('selectedSeatInfo') || 'null');
                return (seatInfo && seatInfo.price) ? seatInfo.price : 0;
            }

            function getLoungePrice() {
                let lounge = JSON.parse(localStorage.getItem('selectedLounge') || 'null');
                return (lounge && lounge.checked && lounge.price) ? lounge.price : 0;
            }

            function updateGrandTotal() {
                let total = 0;
                total += getFlightPrice();
                total += getBaggagePrice();
                total += getMealPrice();
                total += getSeatPrice();
                total += getLoungePrice();
                document.getElementById('grandTotal').textContent = total.toLocaleString('vi-VN') + ' VND';
            }

            // Gọi khi load trang
            updateGrandTotal();

            // Nếu muốn tự động cập nhật khi quay lại từ các dịch vụ bổ sung mà không cần reload, có thể dùng thêm:
            window.addEventListener('focus', updateGrandTotal);

            // Sự kiện chuyển sang trang thanh toán
            var btnGoToPayment = document.getElementById('btnGoToPayment');
            if (btnGoToPayment) {
                btnGoToPayment.onclick = function () {
                    window.location.href = '/get-ticket/payment';
                }
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            const passengersData = JSON.parse(sessionStorage.getItem('passengersData'));

            if (!passengersData) {
                window.location.href = '/get-ticket/passenger-info';
                return;
            }

            // Load services from API
            $.ajax({
                url: '/get-ticket/get-services',
                method: 'GET',
                success: function (services) {
                    // Render passenger info
                    let html = '';
                    for (let i = 0; i < passengersData.length; i++) {
                        const passenger = passengersData[i];
                        html += `
                    <div class="bg-white rounded-xl shadow p-6 mb-4">
                        <!-- Passenger Info -->
                        <div class="flex items-center gap-4 mb-6">
                            <div class="bg-green-100 rounded-full p-3">
                                <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M10 10a4 4 0 100-8 4 4 0 000 8zm-7 8a7 7 0 1114 0H3z" />
                                </svg>
                            </div>
                            <div>
                                <div class="text-xl font-bold text-blue-900">
                                    ${passenger.title} ${passenger.fullName}
                                </div>
                                <div class="text-gray-600">
                                    CCCD/Hộ chiếu: ${passenger.identityNumber} | 
                                    Ngày sinh: ${formatDate(passenger.dob)}
                                </div>
                            </div>
                        </div>

                        <!-- Services Selection -->
                        <div class="border-t pt-4">
                            <h3 class="font-bold text-lg text-blue-900 mb-4">Dịch vụ bổ sung</h3>
                            
                            <!-- Baggage Selection -->
                            <div class="mb-6">
                                <label class="block text-sm font-medium mb-2">
                                    Hành lý ký gửi
                                    <span class="text-xs text-gray-500">(Đã bao gồm 7kg hành lý xách tay)</span>
                                </label>
                                <select class="service-select w-full border rounded-lg p-2.5" 
                                        data-passenger-index="${i}"
                                        data-service-type="baggage">
                                    <option value="">Không mua thêm</option>
                                    ${services
                                .filter(s => s.ServiceType === 'Luggage')
                                .map(s => `
                                            <option value="${s.ServiceID}" data-price="${s.Price}">
                                                ${s.ServiceName} - ${formatPrice(s.Price)}
                                            </option>
                                        `).join('')}
                                </select>
                            </div>

                            <!-- Meal Selection -->
                            <div class="mb-6">
                                <label class="block text-sm font-medium mb-2">
                                    Suất ăn
                                    <span class="text-xs text-gray-500">(Tùy chọn)</span>
                                </label>
                                <select class="service-select w-full border rounded-lg p-2.5"
                                        data-passenger-index="${i}"
                                        data-service-type="meal">
                                    <option value="">Không chọn suất ăn</option>
                                    ${services
                                .filter(s => s.ServiceType === 'Meal')
                                .map(s => `
                                            <option value="${s.ServiceID}" data-price="${s.Price}">
                                                ${s.ServiceName} - ${formatPrice(s.Price)}
                                            </option>
                                        `).join('')}
                                </select>
                            </div>

                            <!-- Service Total -->
                            <div class="flex justify-end border-t pt-4">
                                <div class="text-right">
                                    <span class="text-lg font-semibold text-gray-600">Tổng phụ thu dịch vụ</span>
                                    <div class="passenger-total font-bold text-2xl text-green-700">0 ₫</div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                    }

                    document.getElementById('passengersContainer').innerHTML = html;

                    // Add event listeners
                    document.querySelectorAll('.service-select').forEach(select => {
                        select.addEventListener('change', calculateTotal);
                    });
                },
                error: function (err) {
                    console.error('Error loading services:', err);
                    alert('Không thể tải thông tin dịch vụ. Vui lòng thử lại sau.');
                }
            });
        });

        function calculateTotal() {
            let totalServices = 0;

            // Calculate each passenger's services
            document.querySelectorAll('.bg-white.rounded-xl').forEach(card => {
                let passengerTotal = 0;
                card.querySelectorAll('.service-select').forEach(select => {
                    const selectedOption = select.options[select.selectedIndex];
                    if (selectedOption && selectedOption.dataset.price) {
                        passengerTotal += parseInt(selectedOption.dataset.price);
                    }
                });

                // Update passenger total
                const totalElement = card.querySelector('.passenger-total');
                if (totalElement) {
                    totalElement.textContent = formatPrice(passengerTotal);
                    totalServices += passengerTotal;
                }
            });

            // Update the service total and grand total
            const serviceTotalElement = document.getElementById('serviceTotal');
            const grandTotalElement = document.getElementById('grandTotal');
            const basePrice = parsePrice(document.getElementById('basePrice').textContent);
            
            if (serviceTotalElement) serviceTotalElement.textContent = formatPrice(totalServices);
            if (grandTotalElement) grandTotalElement.textContent = formatPrice(basePrice + totalServices);
        }

        function formatPrice(price) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(price);
        }

        function parsePrice(priceString) {
            return parseInt(priceString.replace(/[^\d]/g, '')) || 0;
        }

        function formatDate(dateString) {
            return new Date(dateString).toLocaleDateString('vi-VN', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit'
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
    const passengersData = JSON.parse(sessionStorage.getItem('passengersData'));
    const flightData = JSON.parse(sessionStorage.getItem('flightData'));
    const selectedFlight = JSON.parse(sessionStorage.getItem('selectedFlight'));

    if (!passengersData || !flightData || !selectedFlight) {
        window.location.href = '/get-ticket/passenger-info';
        return;
    }

    // Hiển thị giá vé cơ bản
    const basePrice = calculateBasePrice();
    document.getElementById('basePrice').textContent = formatPrice(basePrice);

    // Load services from API
    $.ajax({
        url: '/api/services',
        method: 'GET',
        success: function(services) {
            renderPassengers(passengersData, services);
            // Add event listeners for all service selections
            document.querySelectorAll('.service-select').forEach(select => {
                select.addEventListener('change', function() {
                    updateTotals();
                });
            });
        },
        error: function(err) {
            console.error('Error loading services:', err);
            alert('Không thể tải thông tin dịch vụ. Vui lòng thử lại sau.');
        }
    });

    function renderPassengers(passengers, services) {
        const container = document.getElementById('passengersContainer');
        let html = '';

        passengers.forEach((passenger, index) => {
            html += `
                <div class="bg-white rounded-xl shadow p-6 mb-4 passenger-card">
                    <!-- Passenger Info -->
                    <div class="flex items-center gap-4 mb-6">
                        <div class="bg-green-100 rounded-full p-3">
                            <svg class="w-6 h-6 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M10 10a4 4 0 100-8 4 4 0 000 8zm-7 8a7 7 0 1114 0H3z" />
                            </div>
                        </div>
                        <div>
                            <div class="text-xl font-bold text-blue-900">
                                ${passenger.title} ${passenger.fullName}
                            </div>
                            <div class="text-gray-600">
                                CCCD/Hộ chiếu: ${passenger.identityNumber} | 
                                Ngày sinh: ${formatDate(passenger.dob)}
                            </div>
                        </div>
                    </div>

                    <!-- Services Selection -->
                    <div class="border-t pt-4">
                        <h3 class="font-bold text-lg text-blue-900 mb-4">Dịch vụ bổ sung</h3>
                        
                        <!-- Baggage Selection -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium mb-2">
                                Hành lý ký gửi
                                <span class="text-xs text-gray-500">(Đã bao gồm 7kg hành lý xách tay)</span>
                            </label>
                            <select class="service-select w-full border rounded-lg p-2.5" 
                                    data-passenger-index="${index}"
                                    data-service-type="baggage">
                                <option value="" data-price="0">Không mua thêm</option>
                                ${services
                                    .filter(s => s.ServiceType === 'Luggage')
                                    .map(s => `
                                        <option value="${s.ServiceID}" data-price="${s.Price}">
                                            ${s.ServiceName} - ${formatPrice(s.Price)}
                                        </option>
                                    `).join('')}
                            </select>
                        </div>

                        <!-- Meal Selection -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium mb-2">
                                Suất ăn
                                <span class="text-xs text-gray-500">(Tùy chọn)</span>
                            </label>
                            <select class="service-select w-full border rounded-lg p-2.5"
                                    data-passenger-index="${index}"
                                    data-service-type="meal">
                                <option value="" data-price="0">Không chọn suất ăn</option>
                                ${services
                                    .filter(s => s.ServiceType === 'Meal')
                                    .map(s => `
                                        <option value="${s.ServiceID}" data-price="${s.Price}">
                                            ${s.ServiceName} - ${formatPrice(s.Price)}
                                        </option>
                                    `).join('')}
                            </select>
                        </div>

                        <!-- Passenger Service Total -->
                        <div class="flex justify-end border-t pt-4">
                            <div class="text-right">
                                <div class="text-sm text-gray-600">Tổng phụ thu dịch vụ:</div>
                                <div class="passenger-total font-bold text-xl text-green-700">0 ₫</div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });

        container.innerHTML = html;
    }

    function updateTotals() {
        let totalServices = 0;

        // Tính tổng cho từng hành khách
        document.querySelectorAll('.passenger-card').forEach(card => {
            let passengerTotal = 0;
            
            // Tính tổng các dịch vụ của hành khách
            card.querySelectorAll('.service-select').forEach(select => {
                const selectedOption = select.options[select.selectedIndex];
                const price = parseInt(selectedOption.dataset.price) || 0;
                passengerTotal += price;
            });

            // Cập nhật tổng tiền dịch vụ cho hành khách
            const passengerTotalElement = card.querySelector('.passenger-total');
            passengerTotalElement.textContent = formatPrice(passengerTotal);
            
            // Cộng vào tổng tiền dịch vụ
            totalServices += passengerTotal;
        });

        // Cập nhật tổng phụ thu dịch vụ
        document.getElementById('serviceTotal').textContent = formatPrice(totalServices);

        // Cập nhật tổng cộng
        const basePrice = parsePrice(document.getElementById('basePrice').textContent);
        document.getElementById('grandTotal').textContent = formatPrice(basePrice + totalServices);
    }

    function calculateBasePrice() {
        const fareClass = flightData.FareClasses.find(fc => 
            (fc.ClassName === 'EconomyClass' && selectedFlight.class === 'Economy') ||
            (fc.ClassName === 'BusinessClass' && selectedFlight.class === 'Business')
        );

        return fareClass ? fareClass.Price * passengersData.length : 0;
    }
});

// Utility functions
function formatPrice(price) {
    return new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND'
    }).format(price);
}

function parsePrice(priceString) {
    return parseInt(priceString.replace(/[^\d]/g, '')) || 0;
}

function formatDate(dateString) {
    return new Date(dateString).toLocaleDateString('vi-VN', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
    });
}
</script>
</body>

</html>
